[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "new_project_readable_name"
version = "3.5.0"
description = "new_project_description"
authors = ["new_project_author <new_project_author@example.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "new_project_name", from = "src"}]
include = ["LICENSE", "src/new_project_name/py.typed", "src/new_project_name/VERSION"]

[tool.poetry.scripts]
new_project_readable_name = "new_project_name:cli_main"

[tool.poetry.dependencies]
# Main project dependencies.
python = ">=3.9,<4.0"
toml = "^0.10.2"

[tool.poetry.group.dev.dependencies]
# Linters for use during development (e.g. via vscode).
black = "^23.3.0"
mypy = "^1.1.1"
ruff = "^0.0.260"

[tool.poetry.group.types.dependencies]
# Type stubs for mypy
types-toml = "^0.10.8.6"

[tool.poetry.group.test.dependencies]
# For running tests.
pytest = "^7.2.2"
pytest-sugar = "^0.9.6"
pytest-clarity = "^1.0.1"

[tool.poetry.group.lint.dependencies]
# For linting via tox.
pre-commit = "^3.2.1"
mypy = "^1.1.1"

[tool.poetry.group.poetry-plugins.dependencies]
# Poetry plugins for the project.
poetry-bumpversion = "^0.3.0"
poetry-plugin-up = "^0.3.0"

[tool.poetry.group.docs]
# For generating documentation.
optional = true

[tool.poetry.group.docs.dependencies]
pdoc = "^12.0.2"

[tool.poetry.group.release]
# For making a new versioned release of the project.
optional = true

[tool.poetry.group.release.dependencies]
gitchangelog = "^3.0.4"
poetry-bumpversion = "^0.3.0"

### Tool configs ###

[tool.poetry_bumpversion.file."src/new_project_name/__init__.py"]
[tool.poetry_bumpversion.file."src/new_project_name/VERSION"]

[tool.black]
line-length = 120
exclude = ['.*', 'docs']

[tool.pydocstyle]
match = '(?!test)(?!setup)[^\._].*\.py'
match-dir = '(?!tests)(?!build)(?!docs)[^\.].*'
inherit = false
convention = 'google'

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true
strict_equality = true
pretty = true
exclude = '(?x)( ^setup\.py$ | ^__pycache__ | ^build )'

[tool.ruff]
select = ["E", "F", "I", "D", "UP", "TCH", "PT", "ANN"]
line-length = 120
target-version = "py38"
exclude = [".*", "docs", "__pycache__"]
ignore = ["ANN101", "ANN401"]

[tool.ruff.pydocstyle]
convention = "google"
ignore-decorators = ["overrides.overrides"]
