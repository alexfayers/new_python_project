{%- set license_classifiers = {
    'MIT': 'License :: OSI Approved :: MIT License',
    'BSD-3-Clause': 'License :: OSI Approved :: BSD License',
    'ISC': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache-2.0': 'License :: OSI Approved :: Apache Software License',
    'GPL-3.0-only': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} -%}
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "{{ cookiecutter.__project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.project_short_description }}"
authors = ["{{ cookiecutter.full_name }} <{{ cookiecutter.email }}>"]
{%- if cookiecutter.open_source_license in license_classifiers %}
license = "{{ cookiecutter.open_source_license }}"
{%- endif %}
readme = "README.md"
packages = [{include = "{{ cookiecutter.__project_slug}}", from = "src"}]
include = ["LICENSE", "src/{{ cookiecutter.__project_slug}}/py.typed", "src/{{ cookiecutter.__project_slug}}/VERSION"]

[tool.poetry.scripts]
"{{ cookiecutter.__project_slug }}" = "{{ cookiecutter.__project_slug}}:cli_main"

[tool.poetry.dependencies]
# Main project dependencies.
python = ">=3.9,<4.0"
toml = "^0.10.2"

[tool.poetry.group.dev.dependencies]
# Linters for use during development (e.g. via vscode).
black = "^23.3.0"
mypy = "^1.2.0"
ruff = "^0.0.262"

[tool.poetry.group.test.dependencies]
# For running tests.
pytest = "^7.3.1"
pytest-sugar = "^0.9.7"
pytest-clarity = "^1.0.1"

[tool.poetry.group.lint.dependencies]
# For linting via tox.
pre-commit = "^3.2.2"
mypy = "^1.3.0"

[tool.poetry.group.poetry-plugins.dependencies]
# Poetry plugins for the project.
poetry-bumpversion = "^0.3.0"
poetry-plugin-up = "^0.3.0"

[tool.poetry.group.docs]
# For generating documentation.
optional = true

[tool.poetry.group.docs.dependencies]
pdoc = "^12.0.2"

[tool.poetry.group.release]
# For making a new versioned release of the project.
optional = true

[tool.poetry.group.release.dependencies]
gitchangelog = "^3.0.4"
poetry-bumpversion = "^0.3.0"

### Tool configs ###

[tool.poetry_bumpversion.file."src/{{ cookiecutter.__project_slug }}/__init__.py"]
[tool.poetry_bumpversion.file."src/{{ cookiecutter.__project_slug }}/VERSION"]

[tool.black]
line-length = 120
exclude = ['.*', 'docs']

[tool.pydocstyle]
match = '(?!test)(?!setup)[^\._].*\.py'
match-dir = '(?!tests)(?!build)(?!docs)[^\.].*'
inherit = false
convention = 'google'

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true
strict_equality = true
pretty = true
exclude = '(?x)( ^setup\.py$ | ^__pycache__ | ^build )'

[tool.ruff]
select = ["E", "F", "I", "D", "UP", "TCH", "PT", "ANN"]
line-length = 120
target-version = "py38"
exclude = [".*", "docs", "__pycache__"]
ignore = ["ANN101", "ANN401"]

[tool.ruff.pydocstyle]
convention = "google"
ignore-decorators = ["overrides.overrides"]
